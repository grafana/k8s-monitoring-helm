#
# This values file will test the following features:
# * Sending metrics via OTLP
# * Filtering pod logs by namespace
# * Custom test queries, including LogQL queries
#
cluster:
  name: ci-test-cluster-2

externalServices:
  prometheus:
    host: https://prometheus-server.prometheus.svc:80
    basicAuth:
      username: promuser
      password: prometheuspassword
    queryEndpoint: /api/v1/query
    writeEndpoint: /api/v1/otlp
    protocol: otlphttp
    tls:
      insecure_skip_verify: true
  loki:
    host: http://loki.loki.svc:3100
    tenantId: 1
    basicAuth:
      username: loki
      password: lokipassword
  tempo:
    host: http://tempo.tempo.svc:4318
    authMode: none
    protocol: otlphttp
    tlsOptions: |-
      insecure             = true
      insecure_skip_verify = true

metrics:
  cost:
    enabled: false

logs:
  pod_logs:
    namespaces:
      - default
      - loki
      - prometheus
      - grafana
      - tempo
      - monitoring

traces:
  enabled: true

extraConfig: |-
  tracing {
    sampling_fraction = 0.1
    write_to = [otelcol.exporter.otlphttp.traces_service.input]
  }

test:
  extraQueries:
  # Check for cluster events
  - query: "{cluster=\"ci-test-cluster-2\", job=\"integrations/kubernetes/eventhandler\"}"
    type: logql
  # Check for pod logs
  - query: "{cluster=\"ci-test-cluster-2\", job!=\"integrations/kubernetes/eventhandler\"}"
    type: logql

opencost:
  opencost:
    exporter:
      extraEnv:
        INSECURE_SKIP_VERIFY: "true"
    prometheus:
      external:
        url: https://prometheus-server.prometheus.svc.cluster.local:80

grafana-agent:
  agent:
    extraPorts:
      - name: "otlp-grpc"
        port: 4317
        targetPort: 4317
        protocol: "TCP"
      - name: "otlp-http"
        port: 4318
        targetPort: 4318
        protocol: "TCP"
      - name: "zipkin"
        port: 9411
        targetPort: 9411
        protocol: "TCP"
