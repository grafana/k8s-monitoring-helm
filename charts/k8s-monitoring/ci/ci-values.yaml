#
# This values file will test the following features:
# * Control plane metrics
# * External Labels
# * Pod logs (via volumes)
# * Cluster Events
#
cluster:
  name: ci-test-cluster

externalServices:
  prometheus:
    secret:
      create: false
      name: prometheus
    queryEndpoint: /api/v1/query
    writeEndpoint: /api/v1/write
    tls:
      insecure_skip_verify: true
    externalLabels:
      color: red
  loki:
    host: http://loki.loki.svc:3100
    tenantId: 1
    basicAuth:
      username: loki
      password: lokipassword
  tempo:
    host: tempo.tempo.svc:4317
    authMode: none
    tlsOptions: |-
      insecure             = true
      insecure_skip_verify = true

metrics:
  apiserver:
    enabled: true
  kubeControllerManager:
    enabled: true
  kubeProxy:
    enabled: true
  kubeScheduler:
    enabled: true
  kube-state-metrics:
    metricsTuning:
      excludeMetrics:
        - kube_pod_info

traces:
  enabled: true

test:
  attempts: 20
  extraQueries:
    # Check that the external label is properly being set
    - query: "count(kube_node_info{cluster=\"ci-test-cluster\", color=\"red\"})"
      type: promql
      expect:
        value: 1
    # Check that the metrics exclusion list is working
    - query: "kube_pod_info{cluster=\"ci-test-cluster\"}"
      type: promql
      expect:
        count: 0
    # Check for cluster events
    - query: "{cluster=\"ci-test-cluster\", job=\"integrations/kubernetes/eventhandler\"}"
      type: logql
    # Check for pod logs
    - query: "{cluster=\"ci-test-cluster\", job!=\"integrations/kubernetes/eventhandler\"}"
      type: logql

extraConfig: |-
  tracing {
    sampling_fraction = 0.1
    write_to = [otelcol.processor.k8sattributes.default.input]
  }

opencost:
  opencost:
    exporter:
      extraEnv:
        INSECURE_SKIP_VERIFY: "true"
    prometheus:
      secret_name: prometheus
      username_key: username
      password_key: password
      external:
        url: https://prometheus-server.prometheus.svc.cluster.local:80

# Prometheus Operator CRDs are pre-installed in the CI environment
prometheus-operator-crds:
  enabled: false
