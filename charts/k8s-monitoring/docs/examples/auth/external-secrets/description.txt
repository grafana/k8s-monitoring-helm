# Authentication with Pre-existing Secrets

This example demonstrates how to use pre-existing secrets to authenticate to external services. This allows for
credentials to be stored in different secret stores, as long as it resolves to a Kubernetes Secret.

This also shows how to use secrets to store the destination hosts, rather than embedding directly in the configuration.
This uses the `urlFrom` field, which allows for inserting raw Alloy configuration. In this case, referencing the secret
component and appending the paths if necessary.

## Secret

Given these secrets already exist on the cluster, they can be used to authenticate to the external services.

```yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: my-monitoring-secret
  namespace: monitoring
type: Opaque
stringData:
  prom-host: http://prometheus.prometheus.svc:9090
  prom-username: "12345"
  loki-host: http://loki.loki.svc:3100
  loki-username: "67890"
  access-token: "It's a secret to everyone"
---
apiVersion: v1
kind: Secret
metadata:
  name: my-tempo-secret
  namespace: tempo
type: Opaque
stringData:
  tempohost: http://tempo.tempo.svc:4317
  tempoBearerToken: "It's a secret to everyone"
```
