// Destination: loki (loki)
otelcol.exporter.loki "loki" {
  forward_to = [loki.write.loki.receiver]
}

loki.write "loki" {
  endpoint {
    url = "http://loki.loki.svc:3100/loki/api/v1/push"
  }
  external_labels = {
    cluster = "extra-rules-example-cluster",
    "k8s_cluster_name" = "extra-rules-example-cluster",
    site = "lab2",
    region = env("REGION"),
  }
}

// Feature: Cluster Events
declare "cluster_events" {
  argument "logs_destinations" {
    comment = "Must be a list of log destinations where collected logs should be forwarded to"
  }

  loki.source.kubernetes_events "cluster_events" {
    job_name   = "integrations/kubernetes/eventhandler"
    log_format = "logfmt"
    namespaces = ["production"]
    forward_to = loki.process.cluster_events.receiver
  }

  loki.process "cluster_events" {
    stage.logfmt {
      payload = ""
    }
    
    stage.json {
      source = "payload"
      expressions = {
        sku = "id",
        count = "",
      }
    }
    
    stage.static {
      values = {
        site = "lab2",
      }
    }
    
    stage.labels {
      values = {
        sku  = "",
        count = "",
      }
    }
    forward_to = argument.logs_destinations.value
  }
}
cluster_events "feature" {
  logs_destinations = [
    loki.write.loki.receiver,
  ]
}
