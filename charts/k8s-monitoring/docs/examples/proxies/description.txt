# Proxies

This example shows how to use proxy URLs and TLS settings to modify how to send data to the external services.

## Directly setting proxies

Most destinations allow for proxy settings to be set directly on the destination configuration.

```yaml
- name: prometheus
  type: prometheus
  url: http://prometheus.example.com/api/v1/write
  proxyURL: https://myproxy.default.svc:8080
  noProxy: settings.example.com
  proxyConnectHeader:
    "MYPROXY-HEADER": ["my-proxy-header-value"]
```

The `prometheus`, `loki`, and `pyroscope` destinations support setting the `proxyURL`, `noProxy`, and
`proxyConnectHeader` options.

When using the `otlp` destination, the `proxyURL` setting is available if using the `http` protocol. However, if using
the `grpc` protocol, the `proxyURL` setting is not available. Instead, you can set the `HTTP_PROXY` and `NO_PROXY`
environment variables.

## Using environment variables

Another option which will work for all destination types is to use the `HTTP_PROXY`, `HTTPS_PROXY` and/or `NO_PROXY`
environment variables. For `prometheus`, `loki`, and `pyroscope` destinations, use the `proxy_from_environment` option
to indicate that the proxy settings should be read from the environment variables. The `otlp` destination with the
`grpc` protocol can only read the proxy settings from the `HTTPS_PROXY` and/or `NO_PROXY` environment variables.
