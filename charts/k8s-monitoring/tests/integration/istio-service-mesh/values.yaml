---
cluster:
  name: istio-service-mesh-test

destinations:
  - name: localPrometheus
    type: prometheus
    url: http://prometheus-server.prometheus.svc:9090/api/v1/write
    auth:
      type: basic
      username: promuser
      password: prometheuspassword
  - name: localLoki
    type: loki
    url: http://loki.loki.svc:3100/loki/api/v1/push
    tenantId: "1"
    auth:
      type: basic
      username: loki
      password: lokipassword
  - name: localTempo
    type: otlp
    url: tempo.tempo.svc:4317
    tls:
      insecure: true
      insecureSkipVerify: true
    metrics: {enabled: false}
    logs: {enabled: false}
    traces: {enabled: true}

annotationAutodiscovery:
  enabled: true
  annotations:
    scrape: prometheus.io/scrape
    metricsPath: prometheus.io/path
    metricsPortNumber: prometheus.io/port

clusterMetrics:
  enabled: true

clusterEvents:
  enabled: true

podLogs:
  enabled: true

applicationObservability:
  enabled: true
  receivers:
    otlp:
      grpc:
        enabled: true
      http:
        enabled: true
  connectors:
    grafanaCloudMetrics:
      enabled: true
  logs:
    enabled: false

alloy-metrics:
  enabled: true
  alloy:
    clustering:
      portName: tcp
  controller:
    replicas: 2  # To test that clustering is working

alloy-singleton:
  enabled: true

alloy-logs:
  enabled: true

alloy-receiver:
  enabled: true
  liveDebugging:
    enabled: true
  controller:
    # Using TPROXY preserves both the source and destination IP addresses and ports, which allows
    # the k8sattributes processor to look up the pod by IP and enrich the rest of the attributes
    podAnnotations:
      sidecar.istio.io/interceptionMode: TPROXY
