if [ -f .randomNumber ]; then
  export RANDOM_NUMBER=$(cat .randomNumber)
else
  export RANDOM_NUMBER=$(shuf -i 100000-999999 -n 1)
  echo $RANDOM_NUMBER > .randomNumber
fi
clusterName="$(yq '.cluster.name' values.yaml)-$RANDOM_NUMBER"
clusterInstallerFilesDir="$(pwd)/${clusterName}-installer-files"
mkdir -p "${clusterInstallerFilesDir}"
if [ ! -f "${clusterInstallerFilesDir}/gcp_service_account_key.json" ]; then
  op --account grafana.1password.com read --out-file "${clusterInstallerFilesDir}/gcp_service_account_key.json" "op://Kubernetes Monitoring/GCP k8s-monitoring-helm-cluster-creator/credential"
fi
export GCP_SERVICE_ACCOUNT=$(op --account grafana.1password.com read "op://Kubernetes Monitoring/GCP k8s-monitoring-helm-cluster-creator/username")
export GOOGLE_CLOUD_KEYFILE_JSON="${clusterInstallerFilesDir}/gcp_service_account_key.json"
gcloud auth activate-service-account "${GCP_SERVICE_ACCOUNT}" --key-file="${GOOGLE_CLOUD_KEYFILE_JSON}"
export KUBECONFIG="${clusterInstallerFilesDir}/auth/kubeconfig"

export GRAFANA_CLOUD_METRICS_USERNAME=$(op --account grafana.1password.com read "op://Kubernetes Monitoring/helmchart Prometheus/username")
export GRAFANA_CLOUD_LOGS_USERNAME=$(op --account grafana.1password.com read "op://Kubernetes Monitoring/helmchart Loki/username")
export GRAFANA_CLOUD_RW_POLICY_TOKEN=$(op --account grafana.1password.com read "op://Kubernetes Monitoring/helmchart Prometheus/password")
