# yamllint disable rule:document-start rule:line-length rule:trailing-spaces
suite: Test destination validations
templates:
  - validations.yaml
tests:
  - it: asks you to set the name of a destination
    set:
      cluster: {name: test-cluster}
      clusterMetrics: {enabled: true}
      destinations:
        - type: prometheus
    asserts:
      - failedTemplate:
          errorMessage: |-
            execution error at (k8s-monitoring/templates/validations.yaml:5:4): 
            Destination #0 does not have a name.
            Please set:
            destinations:
              - name: my-destination-name

  - it: asks you to set a valid name for the destination
    set:
      cluster: {name: test-cluster}
      clusterMetrics: {enabled: true}
      destinations:
        - name: prøm3thüs!
          type: prometheus
    asserts:
      - failedTemplate:
          errorMessage: |-
            execution error at (k8s-monitoring/templates/validations.yaml:5:4): 
            Destination #0 (prøm3thüs!) invalid characters in its name.
            Please only use alphanumeric, underscores, dashes, or spaces.

  - it: requires a destination type
    set:
      cluster: {name: test-cluster}
      clusterMetrics: {enabled: true}
      destinations:
        - name: a destination with no type
    asserts:
      - failedTemplate:
          errorMessage: |-
            execution error at (k8s-monitoring/templates/validations.yaml:5:4): 
            Destination #0 (a destination with no type) does not have a type.
            Please set:
            destinations:
              - name: a destination with no type
                type: loki, otlp, prometheus, or pyroscope

  - it: validates the destination type
    set:
      cluster: {name: test-cluster}
      clusterMetrics: {enabled: true}
      destinations:
        - name: a destination with an invalid type
          type: invalidType
    asserts:
      - failedTemplate:
          errorMessage: |-
            execution error at (k8s-monitoring/templates/validations.yaml:5:4): 
            Destination #0 (a destination with an invalid type) is using an unknown type (invalidType).
            Please set:
            destinations:
              - name: a destination with an invalid type
                type: "[loki, otlp, prometheus, or pyroscope]"

  - it: allows destination names with alphanumeric, underscores, dashes, and spaces
    set:
      cluster: {name: test-cluster}
      clusterMetrics: {enabled: true}
      alloy-metrics: {enabled: true}
      destinations:
        - name: This is my _Prometheus_ destination-1
          type: prometheus
    asserts:
      - notFailedTemplate: {}

  - it: detects if you're using an otlp destination with an invalid protocol
    set:
      cluster:
        name: test-cluster
      destinations:
        - name: my-destination
          type: otlp
          url: https://otlp.example.com
          protocol: magic
    asserts:
      - failedTemplate:
          errorMessage: |-
            execution error at (k8s-monitoring/templates/validations.yaml:5:4): 
            Destination #0 (my-destination) has an unsupported protocol: magic.
            The protocol must be either "grpc" or "http"
            Please set:
            destinations:
              - name: my-destination
                type: otlp
                protocol: otlp / http

  - it: detects if you're using the Grafana Cloud OTLP endpoint with the wrong protocol
    set:
      cluster:
        name: test-cluster
      destinations:
        - name: OTLP Endpoint
          type: otlp
          url: https://otlp-gateway-test.grafana.net
    asserts:
      - failedTemplate:
          errorMessage: |-
            execution error at (k8s-monitoring/templates/validations.yaml:5:4): 
            Destination #0 (OTLP Endpoint) is using Grafana Cloud OTLP gateway but has incorrect protocol 'grpc (default)'. The gateway requires 'http'.
            Please set:
            destinations:
              - name: OTLP Endpoint
                type: otlp
                url: https://otlp-gateway-test.grafana.net
                protocol: http

  - it: detects if you're using Grafana Cloud Traces with the wrong protocol
    set:
      cluster:
        name: test-cluster
      destinations:
        - name: Grafana Cloud Traces
          type: otlp
          url: https://tempo-test.grafana.net
          protocol: http
    asserts:
      - failedTemplate:
          errorMessage: |-
            execution error at (k8s-monitoring/templates/validations.yaml:5:4): 
            Destination #0 (Grafana Cloud Traces) is using Grafana Cloud Traces but has incorrect protocol 'http'. Grafana Cloud Traces requires 'grpc'.
            Please set:
            destinations:
              - name: Grafana Cloud Traces
                type: otlp
                url: https://tempo-test.grafana.net
                protocol: grpc

  - it: detects if metrics are enabled for Grafana Cloud Traces
    set:
      cluster:
        name: test-cluster
      destinations:
        - name: Grafana Cloud Traces
          type: otlp
          url: https://tempo-test.grafana.net
          protocol: grpc
          metrics: {enabled: true}
          logs: {enabled: false}
          traces: {enabled: true}
    asserts:
      - failedTemplate:
          errorMessage: |-
            execution error at (k8s-monitoring/templates/validations.yaml:5:4): 
            Destination #0 (Grafana Cloud Traces) is using Grafana Cloud Traces but has metrics enabled. Tempo only supports traces.
            Please set:
            destinations:
              - name: Grafana Cloud Traces
                type: otlp
                url: https://tempo-test.grafana.net
                metrics:
                  enabled: false

  - it: detects if logs are enabled for Grafana Cloud Traces
    set:
      cluster:
        name: test-cluster
      destinations:
        - name: Grafana Cloud Traces
          type: otlp
          url: https://tempo-test.grafana.net
          protocol: grpc
          metrics: {enabled: false}
          logs: {enabled: true}
          traces: {enabled: true}
    asserts:
      - failedTemplate:
          errorMessage: |-
            execution error at (k8s-monitoring/templates/validations.yaml:5:4): 
            Destination #0 (Grafana Cloud Traces) is using Grafana Cloud Traces but has logs enabled. Tempo only supports traces.
            Please set:
            destinations:
              - name: Grafana Cloud Traces
                type: otlp
                url: https://tempo-test.grafana.net
                logs:
                  enabled: false

  - it: detects if traces are disabled for Grafana Cloud Traces
    set:
      cluster:
        name: test-cluster
      destinations:
        - name: Grafana Cloud Traces
          type: otlp
          url: https://tempo-test.grafana.net
          protocol: grpc
          metrics: {enabled: false}
          logs: {enabled: false}
          traces: {enabled: false}
    asserts:
      - failedTemplate:
          errorMessage: |-
            execution error at (k8s-monitoring/templates/validations.yaml:5:4): 
            Destination #0 (Grafana Cloud Traces) is using Grafana Cloud Traces but has traces disabled.
            Please set:
            destinations:
              - name: Grafana Cloud Traces
                type: otlp
                url: https://tempo-test.grafana.net
                traces:
                  enabled: true
