should be able to filter by label and annotation:
  1: |
    |-
      declare "profiling" {
        argument "profiles_destinations" {
          comment = "Must be a list of profile destinations where collected profiles should be forwarded to"
        }
        // Profiles: Java
        discovery.kubernetes "java_pods" {
          role = "pod"
          selectors {
            role = "pod"
            label = "app.kubernetes.io/name=secret-program,colors in (blue,green)"
            field = "spec.nodeName=" + sys.env("HOSTNAME")
          }
        }

        discovery.relabel "potential_java_pods" {
          targets = discovery.kubernetes.java_pods.targets
          rule {
            source_labels = ["__meta_kubernetes_pod_phase"]
            regex         = "Succeeded|Failed|Completed"
            action        = "drop"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_java_enabled"]
            regex         = "true"
            action        = "keep"
          }
        }

        discovery.process "java_pods" {
          join = discovery.relabel.potential_java_pods.output
        }

        discovery.relabel "java_pods" {
          targets = discovery.process.java_pods.targets
          rule {
            source_labels = ["__meta_process_exe"]
            action = "keep"
            regex = ".*/java$"
          }
          rule {
            source_labels = ["__meta_kubernetes_namespace"]
            target_label = "namespace"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_annotation_region"]
            regex = "central"
            action = "keep"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_name"]
            target_label = "pod"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_node_name"]
            target_label = "node"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_container_name"]
            target_label = "container"
          }
          rule {
            replacement = "alloy/pyroscope.java"
            target_label = "source"
          }
        }

        pyroscope.java "java_pods" {
          targets = discovery.relabel.java_pods.output
          profiling_config {
            interval = "60s"
            alloc = "512k"
            cpu = true
            sample_rate = 100
            lock = "10ms"
          }
          forward_to = argument.profiles_destinations.value
        }
      }
should be able to target all pods, without requiring the annotation:
  1: |
    |-
      declare "profiling" {
        argument "profiles_destinations" {
          comment = "Must be a list of profile destinations where collected profiles should be forwarded to"
        }
        // Profiles: Java
        discovery.kubernetes "java_pods" {
          role = "pod"
          selectors {
            role = "pod"
            field = "spec.nodeName=" + sys.env("HOSTNAME")
          }
        }

        discovery.relabel "potential_java_pods" {
          targets = discovery.kubernetes.java_pods.targets
          rule {
            source_labels = ["__meta_kubernetes_pod_phase"]
            regex         = "Succeeded|Failed|Completed"
            action        = "drop"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_java_enabled"]
            regex         = "false"
            action        = "drop"
          }
        }

        discovery.process "java_pods" {
          join = discovery.relabel.potential_java_pods.output
        }

        discovery.relabel "java_pods" {
          targets = discovery.process.java_pods.targets
          rule {
            source_labels = ["__meta_process_exe"]
            action = "keep"
            regex = ".*/java$"
          }
          rule {
            source_labels = ["__meta_kubernetes_namespace"]
            target_label = "namespace"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_name"]
            target_label = "pod"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_node_name"]
            target_label = "node"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_container_name"]
            target_label = "container"
          }
          rule {
            replacement = "alloy/pyroscope.java"
            target_label = "source"
          }
        }

        pyroscope.java "java_pods" {
          targets = discovery.relabel.java_pods.output
          profiling_config {
            interval = "60s"
            alloc = "512k"
            cpu = true
            sample_rate = 100
            lock = "10ms"
          }
          forward_to = argument.profiles_destinations.value
        }
      }
should build the Java profiling configuration:
  1: |
    |-
      declare "profiling" {
        argument "profiles_destinations" {
          comment = "Must be a list of profile destinations where collected profiles should be forwarded to"
        }
        // Profiles: Java
        discovery.kubernetes "java_pods" {
          role = "pod"
          selectors {
            role = "pod"
            field = "spec.nodeName=" + sys.env("HOSTNAME")
          }
        }

        discovery.relabel "potential_java_pods" {
          targets = discovery.kubernetes.java_pods.targets
          rule {
            source_labels = ["__meta_kubernetes_pod_phase"]
            regex         = "Succeeded|Failed|Completed"
            action        = "drop"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_java_enabled"]
            regex         = "true"
            action        = "keep"
          }
        }

        discovery.process "java_pods" {
          join = discovery.relabel.potential_java_pods.output
        }

        discovery.relabel "java_pods" {
          targets = discovery.process.java_pods.targets
          rule {
            source_labels = ["__meta_process_exe"]
            action = "keep"
            regex = ".*/java$"
          }
          rule {
            source_labels = ["__meta_kubernetes_namespace"]
            target_label = "namespace"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_name"]
            target_label = "pod"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_node_name"]
            target_label = "node"
          }
          rule {
            source_labels = ["__meta_kubernetes_pod_container_name"]
            target_label = "container"
          }
          rule {
            replacement = "alloy/pyroscope.java"
            target_label = "source"
          }
        }

        pyroscope.java "java_pods" {
          targets = discovery.relabel.java_pods.output
          profiling_config {
            interval = "60s"
            alloc = "512k"
            cpu = true
            sample_rate = 100
            lock = "10ms"
          }
          forward_to = argument.profiles_destinations.value
        }
      }
