should be able to filter by namespace and extra discovery rules:
  1: |
    "declare \"profiling\" {\n  argument \"profiles_destinations\" {\n    comment = \"Must be a list of profile destinations where collected profiles should be forwarded to\"\n  }  \n  // Profiles: eBPF\n  discovery.kubernetes \"ebpf_pods\" {\n    role = \"pod\"\n    selectors {\n      role = \"pod\"\n      field = \"spec.nodeName=\" + sys.env(\"HOSTNAME\")\n    }\n    namespaces {\n      names = [\"default\"]\n    }\n  }\n  \n  discovery.relabel \"ebpf_pods\" {\n    targets = discovery.kubernetes.ebpf_pods.targets\n    rule {\n      source_labels = [\"__meta_kubernetes_pod_phase\"]\n      regex = \"Succeeded|Failed|Completed\"\n      action = \"drop\"\n    }\n    rule {\n      source_labels = [\"__meta_kubernetes_namespace\"]\n      target_label = \"namespace\"\n    }\n    rule {\n      source_labels = [\"__meta_kubernetes_pod_name\"]\n      target_label = \"pod\"\n    }\n    rule {\n      source_labels = [\"__meta_kubernetes_pod_node_name\"]\n      target_label = \"node\"\n    }\n    rule {\n      source_labels = [\"__meta_kubernetes_pod_container_name\"]\n      target_label = \"container\"\n    }\n    // provide arbitrary service_name label, otherwise it will be set to {__meta_kubernetes_namespace}/{__meta_kubernetes_pod_container_name}\n    rule {\n      source_labels = [\"__meta_kubernetes_namespace\", \"__meta_kubernetes_pod_container_name\"]\n      separator = \"@\"\n      regex = \"(.*)@(.*)\"\n      replacement = \"ebpf/${1}/${2}\"\n      target_label = \"service_name\"\n    }\n    rule {\n      source_labels = [\"__meta_kubernetes_pod_label_app_kubernetes_io_name\"]\n      regex = \"secret-program\"\n      action = \"drop\"\n    }\n  }\n  \n  pyroscope.ebpf \"ebpf_pods\" {\n    targets = discovery.relabel.ebpf_pods.output\n    demangle = \"none\"\n    forward_to = argument.profiles_destinations.value\n  }    \n}"
should build the eBPF profiling configuration:
  1: |
    "declare \"profiling\" {\n  argument \"profiles_destinations\" {\n    comment = \"Must be a list of profile destinations where collected profiles should be forwarded to\"\n  }  \n  // Profiles: eBPF\n  discovery.kubernetes \"ebpf_pods\" {\n    role = \"pod\"\n    selectors {\n      role = \"pod\"\n      field = \"spec.nodeName=\" + sys.env(\"HOSTNAME\")\n    }\n  }\n  \n  discovery.relabel \"ebpf_pods\" {\n    targets = discovery.kubernetes.ebpf_pods.targets\n    rule {\n      source_labels = [\"__meta_kubernetes_pod_phase\"]\n      regex = \"Succeeded|Failed|Completed\"\n      action = \"drop\"\n    }\n    rule {\n      source_labels = [\"__meta_kubernetes_namespace\"]\n      target_label = \"namespace\"\n    }\n    rule {\n      source_labels = [\"__meta_kubernetes_pod_name\"]\n      target_label = \"pod\"\n    }\n    rule {\n      source_labels = [\"__meta_kubernetes_pod_node_name\"]\n      target_label = \"node\"\n    }\n    rule {\n      source_labels = [\"__meta_kubernetes_pod_container_name\"]\n      target_label = \"container\"\n    }\n    // provide arbitrary service_name label, otherwise it will be set to {__meta_kubernetes_namespace}/{__meta_kubernetes_pod_container_name}\n    rule {\n      source_labels = [\"__meta_kubernetes_namespace\", \"__meta_kubernetes_pod_container_name\"]\n      separator = \"@\"\n      regex = \"(.*)@(.*)\"\n      replacement = \"ebpf/${1}/${2}\"\n      target_label = \"service_name\"\n    }\n  }\n  \n  pyroscope.ebpf \"ebpf_pods\" {\n    targets = discovery.relabel.ebpf_pods.output\n    demangle = \"none\"\n    forward_to = argument.profiles_destinations.value\n  }    \n}"
