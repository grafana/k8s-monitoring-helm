{{- define "test.configComponents" -}}
{{- if (index .Values.metrics "kube-state-metrics").enabled }}
- name: Kube State Metrics
  components:
  - discovery.relabel.kube_state_metrics
  - prometheus.scrape.kube_state_metrics
{{- end }}
{{- if (index .Values.metrics "node-exporter").enabled }}
- name: Node Exporter
  components:
  - discovery.relabel.node_exporter
  - prometheus.scrape.node_exporter
{{- end }}
{{ if .Values.metrics.cadvisor.enabled }}
- name: cAdvisor
  components:
  - discovery.relabel.cadvisor
  - prometheus.scrape.cadvisor
{{- end }}
{{ if .Values.metrics.kubelet.enabled }}
- name: Kubelet
  components:
  - discovery.relabel.kubelet
  - prometheus.scrape.kubelet
{{- end }}
{{ if .Values.metrics.agent.enabled }}
- name: Agent
  components:
  - discovery.relabel.agent
  - prometheus.scrape.agent
{{- end }}
{{ if .Values.metrics.cost.enabled }}
- name: OpenCost
  components:
  - discovery.relabel.opencost
  - prometheus.scrape.opencost
{{- end }}
{{- if (index .Values.metrics "windows-exporter").enabled }}
- name: Windows Exporter
  components:
    - discovery.relabel.windows_exporter
    - prometheus.scrape.windows_exporter
{{- end }}
{{- if .Values.metrics.apiserver.enabled }}
- name: Kube API Server
  components:
    - discovery.relabel.apiserver
    - prometheus.scrape.apiserver
{{- end }}
{{- if .Values.metrics.kubeControllerManager.enabled }}
- name: KubeControllerManager
  components:
    - discovery.relabel.kube_controller_manager
    - prometheus.scrape.kube_controller_manager
{{- end }}
{{- if .Values.metrics.kubeProxy.enabled }}
- name: KubeProxy
  components:
    - discovery.relabel.kube_proxy
    - prometheus.scrape.kube_proxy
{{- end }}
{{- if .Values.metrics.kubeScheduler.enabled }}
- name: KubeScheduler
  components:
    - discovery.relabel.kube_scheduler
    - prometheus.scrape.kube_scheduler
{{- end }}
{{ if .Values.metrics.autoDiscover.enabled }}
- name: Annotation-based AutoDiscovery
  components:
  - discovery.relabel.annotation_autodiscovery_pods
  - discovery.relabel.annotation_autodiscovery_services
  - prometheus.scrape.annotation_autodiscovery
{{- end }}
{{- end -}}

{{- define "test.queryList" -}}
queries:
  {{- if .Values.metrics.enabled }}
  - query: up{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- if .Values.metrics.agent.enabled }}
  - query: agent_build_info{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- end }}
    {{- if .Values.metrics.kubelet.enabled }}
  - query: kubernetes_build_info{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- end }}
    {{- if .Values.metrics.cadvisor.enabled }}
  - query: machine_memory_bytes{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- end }}
    {{- if (index .Values.metrics "kube-state-metrics").enabled }}
  - query: kube_node_info{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- end }}
    {{- if (index .Values.metrics "node-exporter").enabled }}
  - query: node_exporter_build_info{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- end }}
    {{- if (index .Values.metrics "windows-exporter").enabled }}
  - query: windows_exporter_build_info{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- end }}
    {{- if .Values.metrics.apiserver.enabled }}
  - query: apiserver_request_total{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- end }}
    {{- if .Values.metrics.kubeControllerManager.enabled }}
  - query: workqueue_adds_total{cluster={{ .Values.cluster.name | quote}}, job="kube-controller-manager"}
    type: promql
    {{- end }}
    {{- if .Values.metrics.kubeProxy.enabled }}
  - query: kubeproxy_sync_proxy_rules_service_changes_total{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- end }}
    {{- if .Values.metrics.kubeScheduler.enabled }}
  - query: scheduler_unschedulable_pods{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- end }}
    {{- if .Values.metrics.cost.enabled }}
  - query: opencost_build_info{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- end }}
    {{- if .Values.metrics.kubernetesMonitoring.enabled }}
  - query: grafana_kubernetes_monitoring_build_info{cluster={{ .Values.cluster.name | quote}}}
    type: promql
    {{- end }}
{{- if .Values.test.extraQueries }}
  {{- range .Values.test.extraQueries }}
  - query: {{ .query | quote }}
    type: {{ .type | default "promql" }}
  {{- end }}
{{- end }}
  {{- end }}
{{- end -}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "kubernetes-monitoring-config-analysis.fullname" . | quote }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "0"
spec:
  completions: 1
  parallelism: 1
  backoffLimit: {{ sub .Values.test.attempts 1 }}
  template:
    metadata:
      name: {{ include "kubernetes-monitoring-config-analysis.fullname" . | quote }}
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      {{- if or .Values.global.image.pullSecrets .Values.test.image.pullSecrets }}
      imagePullSecrets:
        {{- if .Values.global.image.pullSecrets }}
        {{- toYaml .Values.global.image.pullSecrets | nindent 8 }}
        {{- else }}
        {{- toYaml .Values.test.image.pullSecrets | nindent 8 }}
        {{- end }}
      {{- end }}
      restartPolicy: Never
      {{- with .Values.test.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.test.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: config-analysis
          image: {{ .Values.global.image.registry | default .Values.test.image.registry }}/{{ .Values.test.image.image }}:{{ .Values.test.image.tag | default .Chart.Version }}
          command: ["bash", "-c", "/etc/bin/config-analysis.sh /etc/test/configComponents.json"]
          volumeMounts:
            - name: test-files
              mountPath: /etc/test
          env:
            - name: AGENT_HOST
              value: {{ include "grafana-agent.fullname" (index .Subcharts "grafana-agent") }}.{{ .Release.Namespace }}.svc
      volumes:
        - name: test-files
          configMap:
            name: {{ include "kubernetes-monitoring-test.fullname" . | quote }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "kubernetes-monitoring-test.fullname" . | quote }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "0"
spec:
  completions: 1
  parallelism: 1
  backoffLimit: {{ sub .Values.test.attempts 1 }}
  template:
    metadata:
      name: {{ include "kubernetes-monitoring-test.fullname" . | quote }}
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      {{- if or .Values.global.image.pullSecrets .Values.test.image.pullSecrets }}
      imagePullSecrets:
        {{- if .Values.global.image.pullSecrets }}
        {{- toYaml .Values.global.image.pullSecrets | nindent 8 }}
        {{- else }}
        {{- toYaml .Values.test.image.pullSecrets | nindent 8 }}
        {{- end }}
      {{- end }}
      restartPolicy: Never
      {{- with .Values.test.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.test.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: query-test
          image: {{ .Values.global.image.registry | default .Values.test.image.registry }}/{{ .Values.test.image.image }}:{{ .Values.test.image.tag | default .Chart.Version }}
          command: ["bash", "-c", "/etc/bin/query-test.sh /etc/test/testQueries.json"]
          volumeMounts:
            - name: test-files
              mountPath: /etc/test
          env:
            - name: PROMETHEUS_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "kubernetes_monitoring.metrics_service.secret.name" . }}
                  key: {{ .Values.externalServices.prometheus.hostKey }}
                  optional: true
            - name: PROMETHEUS_URL
              value: $(PROMETHEUS_HOST){{ .Values.externalServices.prometheus.queryEndpoint }}
            - name: PROMETHEUS_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "kubernetes_monitoring.metrics_service.secret.name" . }}
                  key: {{ .Values.externalServices.prometheus.basicAuth.usernameKey }}
                  optional: true
            - name: PROMETHEUS_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "kubernetes_monitoring.metrics_service.secret.name" . }}
                  key: {{ .Values.externalServices.prometheus.basicAuth.passwordKey }}
                  optional: true

            - name: LOKI_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "kubernetes_monitoring.logs_service.secret.name" . }}
                  key: {{ .Values.externalServices.loki.hostKey }}
            - name: LOKI_URL
              value: $(LOKI_HOST){{ .Values.externalServices.loki.queryEndpoint }}
            - name: LOKI_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "kubernetes_monitoring.logs_service.secret.name" . }}
                  key: {{ .Values.externalServices.loki.basicAuth.usernameKey }}
                  optional: true
            - name: LOKI_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "kubernetes_monitoring.logs_service.secret.name" . }}
                  key: {{ .Values.externalServices.loki.basicAuth.passwordKey }}
                  optional: true
            - name: LOKI_TENANTID
              valueFrom:
                secretKeyRef:
                  name: {{ include "kubernetes_monitoring.logs_service.secret.name" . }}
                  key: {{ .Values.externalServices.loki.tenantIdKey }}
                  optional: true

      volumes:
        - name: test-files
          configMap:
            name: {{ include "kubernetes-monitoring-test.fullname" . | quote }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "kubernetes-monitoring-test.fullname" . | quote }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
data:
  testQueries.json: |-
{{- include "test.queryList" . | fromYaml | toPrettyJson | nindent 4 }}
  configComponents.json: |-
{{- include "test.configComponents" . | fromYamlArray | toPrettyJson | nindent 4 }}
