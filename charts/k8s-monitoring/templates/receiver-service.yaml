{{- $collectorName := "alloy-receiver" }}
{{- $collectorValues := include "collector.alloy.values" (deepCopy $ | merge (dict "collectorName" $collectorName)) | fromYaml }}

{{- if and $collectorValues.enabled $collectorValues.extraService.enabled -}}
{{- $name := printf "%s-%s" .Release.Name $collectorValues.extraService.name | trunc 63 | trimSuffix "-" }}
{{- if $collectorValues.extraService.fullname }}
  {{- $name = $collectorValues.extraService.fullname }}
{{- end }}

apiVersion: v1
kind: Service
metadata:
  name: {{ $name }}
  labels:
    {{- include "collector.alloy.labels" (deepCopy $ | merge (dict "collectorName" $collectorName)) | nindent 4 }}
    app.kubernetes.io/component: networking
  {{- with $collectorValues.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: {{ $collectorValues.service.type }}
  {{- if $collectorValues.service.clusterIP }}
  clusterIP: {{ $collectorValues.service.clusterIP }}
  {{- end }}
  selector:
    {{- include "collector.alloy.selectorLabels" (deepCopy $ | merge (dict "collectorName" $collectorName)) | nindent 4 }}
  {{- if semverCompare ">=1.26-0" .Capabilities.KubeVersion.Version }}
  internalTrafficPolicy: {{ $collectorValues.service.internalTrafficPolicy}}
  {{- end }}
  ports:
    - name: http-metrics
      {{- if eq $collectorValues.service.type "NodePort" }}
      nodePort: {{ $collectorValues.service.nodePort }}
      {{- end }}
      port: {{ $collectorValues.alloy.listenPort }}
      targetPort: {{ $collectorValues.alloy.listenPort }}
      protocol: "TCP"
{{- range $portMap := $collectorValues.alloy.extraPorts }}
    - name: {{ $portMap.name }}
      port: {{ $portMap.port }}
      targetPort: {{ $portMap.targetPort }}
      protocol: {{ coalesce $portMap.protocol "TCP" }}
{{- end }}
{{- end }}
