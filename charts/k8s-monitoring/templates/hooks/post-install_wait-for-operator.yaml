{{- if and (index .Values "alloy-operator").deploy (index .Values "alloy-operator").waitForReadiness.enabled }}
{{- $jobName := (printf "%s-wait-alloy-operator" (include "helper.fullname" .)) | trunc 63 | trimSuffix "-" }}
{{- $jobSettings := (index .Values "alloy-operator").waitForReadiness -}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $jobName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ $jobName }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ include "helper.chart" . }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "5"
spec:
  ttlSecondsAfterFinished: 300
  backoffLimit: 3
  template:
    metadata:
      name: {{ $jobName }}
      labels:
        app.kubernetes.io/name: {{ include "helper.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: Never
      {{- with $jobSettings.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $jobSettings.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ $jobName }}
      containers:
        - name: wait-for-operator
          {{- with $jobSettings.image }}
            {{- if .digest }}
          image: "{{ dig "image" "registry" .registry $.Values.global }}/{{ .repository }}@{{ .digest }}"
            {{- else }}
          image: "{{ dig "image" "registry" .registry $.Values.global }}/{{ .repository }}:{{ .tag }}"
            {{- end }}
          {{- end }}
          command:
            - /bin/bash
            - -ce
            - |
              echo "Waiting for Alloy Operator to be ready..."
              kubectl wait \
                --timeout=300s \
                --namespace={{ .Release.Namespace }} \
                --for=condition=available \
                deployment/{{ include "alloy-operator.fullname" (index .Subcharts "alloy-operator") }}

              echo "Verifying Alloy Operator pod is running..."
              kubectl wait \
                --timeout=120s \
                --namespace={{ .Release.Namespace }} \
                --for=condition=ready \
                pod -l app.kubernetes.io/name=alloy-operator

              echo "Alloy Operator is ready!"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $jobName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "5"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $jobName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "5"
rules:
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $jobName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "5"
subjects:
  - kind: ServiceAccount
    name: {{ $jobName }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ $jobName }}
  apiGroup: rbac.authorization.k8s.io
{{- end }}
