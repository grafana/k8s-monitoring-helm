---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "config-validator.fullname" . | quote }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    {{- range $key, $val := .Values.configValidator.extraLabels }}
    {{ $key }}: {{ $val | quote }}
    {{- end}}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- range $key, $val := .Values.configValidator.extraAnnotations }}
    {{ $key }}: {{ $val | quote }}
    {{- end}}
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ include "config-validator.fullname" . | quote }}
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        {{- range $key, $val := .Values.configValidator.extraLabels }}
        {{ $key }}: {{ $val | quote }}
        {{- end}}
      {{- with .Values.configValidator.extraAnnotations }}
      annotations:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
    spec:
      {{- if or .Values.global.image.pullSecrets (index .Values "grafana-agent").image.pullSecrets }}
      imagePullSecrets:
        {{- if .Values.global.image.pullSecrets }}
        {{- toYaml .Values.global.image.pullSecrets | nindent 8 }}
        {{- else }}
        {{- toYaml (index .Values "grafana-agent").image.pullSecrets | nindent 8 }}
        {{- end }}
      {{- end }}
      restartPolicy: Never
      {{- with .Values.configValidator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.configValidator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: grafana-agent
          image: "{{ .Values.global.image.registry | default (index .Values "grafana-agent").image.registry }}/{{ (index .Values "grafana-agent").image.repository }}{{ include "grafana-agent.imageId" (index .Subcharts "grafana-agent") }}"
          command:
          - bash
          - -ec
          - |
            echo Validating Grafana Agent config file
            if grafana-agent fmt /etc/agent/config.river > /dev/null; then
              echo "Grafana Agent config file is valid"
            fi
{{- if and .Values.logs.enabled .Values.logs.cluster_events.enabled }}
            echo Validating Grafana Agent for Events config file
            if grafana-agent fmt /etc/agent/events.river > /dev/null; then
              echo "Grafana Agent for Events config file is valid"
            fi
{{- end }}
{{- if and .Values.logs.enabled .Values.logs.pod_logs.enabled }}
            echo Validating Grafana Agent for Logs config file
            if grafana-agent fmt /etc/agent/logs.river > /dev/null; then
              echo "Grafana Agent for Logs config file is valid"
            fi
{{- end }}
          env:
            - name: AGENT_MODE
              value: flow
          volumeMounts:
            - name: config
              mountPath: /etc/agent
      volumes:
        - name: config
          configMap:
            name: {{ include "config-validator.fullname" . | quote }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "config-validator.fullname" . | quote }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
data:
  config.river: |-
    {{- include "agentConfig" . | trim | nindent 4 }}
{{- if and .Values.logs.enabled .Values.logs.cluster_events.enabled }}
  events.river: |-
    {{- include "agentEventsConfig" . | trim | nindent 4 }}
{{- end }}
{{- if and .Values.logs.enabled .Values.logs.pod_logs.enabled }}
  logs.river: |-
    {{- include "agentLogsConfig" . | trim | nindent 4 }}
{{- end }}
