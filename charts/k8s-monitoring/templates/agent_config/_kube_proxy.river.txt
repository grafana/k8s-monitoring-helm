{{ define "agent.config.kube_proxy" }}
// Kube Proxy
discovery.relabel "kube_proxy" {
  targets = discovery.kubernetes.pods.targets
  rule {
    source_labels = ["__meta_kubernetes_namespace"]
    regex = "kube-system"
    action = "keep"
  }
  rule {
    source_labels = ["__meta_kubernetes_pod_label_k8s_app"]
    regex = "kube-proxy"
    action = "keep"
  }
  rule {
    source_labels = ["__address__"]
    replacement = "$1:{{ .Values.metrics.kubeProxy.port }}"
    target_label = "__address__"
  }
{{- if .Values.metrics.extraRelabelingRules }}
{{ .Values.metrics.extraRelabelingRules | indent 2 }}
{{- end }}
{{- if .Values.metrics.kubeProxy.extraRelabelingRules }}
{{ .Values.metrics.kubeProxy.extraRelabelingRules | indent 2 }}
{{- end }}
}

prometheus.scrape "kube_proxy" {
  job_name   = "integrations/kubernetes/kube-proxy"
  targets    = discovery.relabel.kube_proxy.output
  scheme     = "http"
  scrape_interval = {{ .Values.metrics.kubeProxy.scrapeInterval | default .Values.metrics.scrapeInterval | quote }}
{{- if (index .Values "grafana-agent").agent.clustering.enabled }}
  clustering {
    enabled = true
  }
{{- end }}
  forward_to = [prometheus.relabel.kube_proxy.receiver]
}

prometheus.relabel "kube_proxy" {
{{- if .Values.metrics.kubeProxy.metricsTuning.includeMetrics }}
  rule {
    source_labels = ["__name__"]
    regex = "up|{{ join "|" .Values.metrics.kubeProxy.metricsTuning.includeMetrics }}"
    action = "keep"
  }
{{- end }}
{{- if .Values.metrics.kubeProxy.metricsTuning.excludeMetrics }}
  rule {
    source_labels = ["__name__"]
    regex = {{ join "|" .Values.metrics.kubeProxy.metricsTuning.excludeMetrics | quote }}
    action = "drop"
  }
{{- end }}
{{- if .Values.metrics.kubeProxy.extraMetricRelabelingRules }}
{{ .Values.metrics.kubeProxy.extraMetricRelabelingRules | indent 2 }}
{{- end }}
  forward_to = [prometheus.relabel.metrics_service.receiver]
}
{{ end }}
