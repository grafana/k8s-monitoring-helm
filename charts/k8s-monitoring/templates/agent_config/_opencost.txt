{{ define "agent.config.opencost.allowList" }}
{{ if .Values.metrics.cost.metricsTuning.useDefaultAllowList }}
{{ "default_allow_lists/opencost.yaml" | .Files.Get }}
{{ end }}
{{ if .Values.metrics.cost.metricsTuning.includeMetrics }}
{{ .Values.metrics.cost.metricsTuning.includeMetrics | toYaml }}
{{ end }}
{{ end }}

{{ define "agent.config.opencost" }}
// OpenCost
discovery.relabel "opencost" {
  targets = discovery.kubernetes.services.targets
  rule {
    source_labels = ["__meta_kubernetes_service_label_app_kubernetes_io_instance"]
    regex = "{{ .Release.Name }}"
    action = "keep"
  }
  {{- range $k, $v := .Values.metrics.cost.labelMatchers }}
  rule {
    source_labels = ["__meta_kubernetes_service_label_{{ include "escape_label" $k }}"]
    regex = "{{ $v }}"
    action = "keep"
  }
  {{- end }}
  rule {
    source_labels = ["__meta_kubernetes_service_port_name"]
    regex = "http"
    action = "keep"
  }
{{- if .Values.metrics.extraRelabelingRules }}
{{ .Values.metrics.extraRelabelingRules | indent 2 }}
{{- end }}
{{- if .Values.metrics.cost.extraRelabelingRules }}
{{ .Values.metrics.cost.extraRelabelingRules | indent 2 }}
{{- end }}
}

prometheus.scrape "opencost" {
  job_name   = "integrations/kubernetes/opencost"
  targets    = discovery.relabel.opencost.output
  scrape_interval = {{ .Values.metrics.cost.scrapeInterval | default .Values.metrics.scrapeInterval | quote }}
{{- if (index .Values "grafana-agent").agent.clustering.enabled }}
  clustering {
    enabled = true
  }
{{- end }}
  forward_to = [prometheus.relabel.opencost.receiver]
}

prometheus.relabel "opencost" {
{{- if or .Values.metrics.cost.metricsTuning.useDefaultAllowList .Values.metrics.cost.metricsTuning.includeMetrics }}
  rule {
    source_labels = ["__name__"]
    regex = "up|{{ join "|" (include "agent.config.opencost.allowList" . | fromYamlArray) }}"
    action = "keep"
  }
{{- end }}
{{- if .Values.metrics.cost.metricsTuning.excludeMetrics }}
  rule {
    source_labels = ["__name__"]
    regex = {{ join "|" .Values.metrics.cost.metricsTuning.excludeMetrics | quote }}
    action = "drop"
  }
{{- end }}
{{- if .Values.metrics.cost.extraMetricRelabelingRules }}
{{ .Values.metrics.cost.extraMetricRelabelingRules | indent 2 }}
{{- end }}
  forward_to = [prometheus.relabel.metrics_service.receiver]
}
{{ end }}
