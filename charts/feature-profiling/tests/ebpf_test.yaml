# yamllint disable rule:document-start rule:line-length rule:trailing-spaces
suite: Test default values
templates:
  - configmap.yaml
tests:
  - it: should build the eBPF profiling configuration
    set:
      deployAsConfigMap: true
      ebpf:
        enabled: true
      java:
        enabled: false
      pprof:
        enabled: false
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: data["module.alloy"]
          value: |-
            declare "profiling" {
              argument "profiles_destinations" {
                comment = "Must be a list of profile destinations where collected profiles should be forwarded to"
              }
              // Profiles: eBPF
              discovery.kubernetes "ebpf_pods" {
                selectors {
                  role = "pod"
                  field = "spec.nodeName=" + env("HOSTNAME")
                }
                role = "pod"
              }
          
              discovery.relabel "ebpf_pods" {
                targets = discovery.kubernetes.ebpf_pods.targets
                rule {
                  source_labels = ["__meta_kubernetes_pod_phase"]
                  regex = "Succeeded|Failed|Completed"
                  action = "drop"
                }
                rule {
                  source_labels = ["__meta_kubernetes_namespace"]
                  target_label = "namespace"
                }
                rule {
                  source_labels = ["__meta_kubernetes_pod_name"]
                  target_label = "pod"
                }
                rule {
                  source_labels = ["__meta_kubernetes_pod_node_name"]
                  target_label = "node"
                }
                rule {
                  source_labels = ["__meta_kubernetes_pod_container_name"]
                  target_label = "container"
                }
                // provide arbitrary service_name label, otherwise it will be set to {__meta_kubernetes_namespace}/{__meta_kubernetes_pod_container_name}
                rule {
                  source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
                  separator = "@"
                  regex = "(.*)@(.*)"
                  replacement = "ebpf/${1}/${2}"
                  target_label = "service_name"
                }
              }
          
              pyroscope.ebpf "ebpf_pods" {
                targets = discovery.relabel.ebpf_pods.output
                demangle = "none"
                forward_to = argument.profiles_destinations.value
              }
            }
  - it: should be able to filter by namespace and extra discovery rules
    set:
      deployAsConfigMap: true
      ebpf:
        enabled: true
        namespaces: [default]
        extraDiscoveryRules: |-
          rule {
            source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
            regex = "secret-program"
            action = "drop"
          }
      java:
        enabled: false
      pprof:
        enabled: false
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: data["module.alloy"]
          value: |-
            declare "profiling" {
              argument "profiles_destinations" {
                comment = "Must be a list of profile destinations where collected profiles should be forwarded to"
              }
              // Profiles: eBPF
              discovery.kubernetes "ebpf_pods" {
                selectors {
                  role = "pod"
                  field = "spec.nodeName=" + env("HOSTNAME")
                }
                namespaces {
                  names = ["default"]
                }
                role = "pod"
              }
            
              discovery.relabel "ebpf_pods" {
                targets = discovery.kubernetes.ebpf_pods.targets
                rule {
                  source_labels = ["__meta_kubernetes_pod_phase"]
                  regex = "Succeeded|Failed|Completed"
                  action = "drop"
                }
                rule {
                  source_labels = ["__meta_kubernetes_namespace"]
                  target_label = "namespace"
                }
                rule {
                  source_labels = ["__meta_kubernetes_pod_name"]
                  target_label = "pod"
                }
                rule {
                  source_labels = ["__meta_kubernetes_pod_node_name"]
                  target_label = "node"
                }
                rule {
                  source_labels = ["__meta_kubernetes_pod_container_name"]
                  target_label = "container"
                }
                // provide arbitrary service_name label, otherwise it will be set to {__meta_kubernetes_namespace}/{__meta_kubernetes_pod_container_name}
                rule {
                  source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
                  separator = "@"
                  regex = "(.*)@(.*)"
                  replacement = "ebpf/${1}/${2}"
                  target_label = "service_name"
                }
                rule {
                  source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
                  regex = "secret-program"
                  action = "drop"
                }
              }
            
              pyroscope.ebpf "ebpf_pods" {
                targets = discovery.relabel.ebpf_pods.output
                demangle = "none"
                forward_to = argument.profiles_destinations.value
              }
            }
