cluster:
  name: custom-config-test

externalServices:
  prometheus:
    host: https://prometheus.example.com
    basicAuth:
      username: 12345
      password: "It's a secret to everyone"
  loki:
    host: https://loki.example.com
    basicAuth:
      username: 12345
      password: "It's a secret to everyone"

extraConfig: |-
  discovery.relabel "my_webapp" {
    targets = discovery.kubernetes.services.targets
    rule {
    source_labels = ["__meta_kubernetes_service_label_app"]
    regex = "my-webapp"
    action = "keep"
    }
    rule {
    source_labels = ["__meta_kubernetes_service_name"]
    regex = "my-webapp-metrics"
    action = "keep"
    }
    rule {
    source_labels = ["__name__"]
    replacement   = "my-cluster"
    target_label  = "cluster"
    }
  }
  
  prometheus.scrape "my_webapp" {
    job_name   = "my_webapp"
    targets    = discovery.relabel.my_webapp.output
    forward_to = [prometheus.remote_write.grafana_cloud_prometheus.receiver]
  }

logs:
  extraConfig: |-
    discovery.relabel "postgres_logs" {
      targets = discovery.relabel.pod_logs.output
      
      rule {
        source_labels = ["namespace"]
        regex = "<your_postgres_namespace>"
        action = "keep"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_label_<your_postgres_selector_labelname>"]
        regex = "<your_postgres_selector_labelvalue>"
        action = "keep"
      }
    }

    local.file_match "postgres_logs" {
      path_targets = discovery.relabel.postgres_logs.output
    }

    loki.source.file "postgres_logs" {
      targets    = local.file_match.postgres_logs.targets
      forward_to = [loki.process.postgres_logs.receiver]
    }

    loki.process "postgres_logs" {
      stage.cri {}
      stage.static_labels {
        values = {
          job = "integrations/postgres_exporter",
          instance = "<your_postgres_instance_name>",
        }
      }
      forward_to = [loki.write.grafana_cloud_loki.receiver]
    }
