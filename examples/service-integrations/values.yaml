---
cluster:
  name: service-integrations-test

externalServices:
  prometheus:
    host: https://prometheus.example.com
    basicAuth:
      username: 12345
      password: "It's a secret to everyone"
  loki:
    host: https://loki.example.com
    basicAuth:
      username: 12345
      password: "It's a secret to everyone"

extraConfig: |
  remote.kubernetes.configmap "mysql_config" {
    name = "mysql-monitoring"
    namespace = "mysql"
  }

  import.string "mysql" {
    content = remote.kubernetes.configmap.mysql_config.data["metrics.alloy"]
  }

  mysql.metrics "primary" {
    host = "mysql.mysql.svc.cluster.local"
    instance = "primary"
    namespace = "mysql"
    secret_name = "mysql"
    username = "root"
    password_key = "mysql-root-password"
    all_services = discovery.kubernetes.services.targets
    metrics_destination = prometheus.relabel.metrics_service.receiver
  }

logs:
  extraConfig: |
    remote.kubernetes.configmap "mysql_config" {
      name = "mysql-monitoring"
      namespace = "mysql"
    }

    import.string "mysql" {
      content = remote.kubernetes.configmap.mysql_config.data["logs.alloy"]
    }

    mysql.logs "primary" {
      instance = "primary"
      all_pods = discovery.relabel.pod_logs.output
      logs_destination = loki.process.logs_service.receiver
    }

test:
  extraQueries:
    # Check for CertManager metrics
    - query: "certmanager_clock_time_seconds{cluster=\"ci-integrations-cluster\"}"
      type: promql
    # Check for MySQL metrics
    - query: "mysqld_exporter_build_info{cluster=\"ci-integrations-cluster\"}"
      type: promql
    # Check for MySQL logs
    - query: "{cluster=\"ci-integrations-cluster\", job=\"integrations/mysql\"}"
      type: logql
    # Check for Alloy logs
    - query: "{cluster=\"ci-integrations-cluster\", job=\"integrations/alloy\"}"
      type: logql
    # Check for Node Exporter logs
    - query: "{cluster=\"ci-integrations-cluster\", job=\"integrations/node_exporter\"}"
      type: logql
