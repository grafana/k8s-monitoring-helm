---
name: Integration Test
# yamllint disable-line rule:truthy
on:
  push:
    branches: ["main"]
    paths:
      - 'charts/**'
      - '!charts/k8s-monitoring-v1/**'
  pull_request:
    paths:
      - 'charts/**'
      - '!charts/k8s-monitoring-v1/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: {}

jobs:
  list-tests:
    name: List tests
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.list_tests.outputs.tests }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: 'false'

      - name: List tests
        id: list_tests
        working-directory: charts/k8s-monitoring/tests/integration
        env:
          LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
        run: |
          # if "integration-test-skip" is set, return an empty list
          # All labels on this PR
          if echo "${LABELS}" | jq --exit-status '. | any(. == "integration-test-skip")' > /dev/null; then
              echo "\"integration-test-skip\" label is set, skipping integration tests."
              echo "tests=[]" >> "${GITHUB_OUTPUT}"
              exit 0
          fi

          tests=$(find . -name values.yaml -exec dirname {} \;)
          echo "Tests: ${tests}"
          echo "tests=$(echo "${tests}" | jq --raw-input --slurp --compact-output 'split("\n") | map(select(. != ""))')" >> "${GITHUB_OUTPUT}"

  run-tests:
    name: Integration Test
    needs: list-tests
    runs-on: ubuntu-latest
    if: needs.list-tests.outputs.tests != '[]'
    strategy:
      matrix:
        test: ${{ fromJson(needs.list-tests.outputs.tests) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: 'false'

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112  # v4.3.0

      - name: Setup Kind CLI
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3  # v1.12.0
        with:
          install_only: true

      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@b73c7f7191086ca7629840e680e71873349787f8  # v2.6.1

      - name: Read special test dependencies
        id: read_deps
        env:
          TEST: ${{ matrix.test }}
        run: |
          if [ -f "charts/k8s-monitoring/tests/integration/${TEST}/deps.json" ]; then
            # e.g. ["terraform", "vendir"]
            echo "deps=$(jq --compact-output '.' "charts/k8s-monitoring/tests/integration/${TEST}/deps.json")" >> "${GITHUB_ENV}"
          else
            echo "deps=[]" >> "${GITHUB_ENV}"
          fi

      - name: Install terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd  # v3.1.2
        if: contains(env.deps, 'terraform')

      - name: Run test
        run: ./scripts/run-cluster-test.sh "charts/k8s-monitoring/tests/integration/${TEST}"
        env:
          TEST: ${{ matrix.test }}
          CREATE_CLUSTER: "true"
          DELETE_CLUSTER: "true"
