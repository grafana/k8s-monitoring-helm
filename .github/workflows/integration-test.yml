---
name: Integration Test
# yamllint disable-line rule:truthy
on:
  push:
    branches: ["main", "2.0-stable"]
    paths:
      - 'charts/**'
      - '!charts/k8s-monitoring-v1/**'
  pull_request:
    paths:
      - 'charts/**'
      - '!charts/k8s-monitoring-v1/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: {}

jobs:
  list-tests:
    name: List tests
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.list_tests.outputs.tests }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          persist-credentials: 'false'

      - name: List tests
        id: list_tests
        working-directory: charts/k8s-monitoring/tests/integration
        env:
          LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
        run: |
          # if "integration-test-skip" is set, return an empty list
          # All labels on this PR
          if echo "${LABELS}" | jq --exit-status '. | any(. == "integration-test-skip")' > /dev/null; then
              echo "\"integration-test-skip\" label is set, skipping integration tests."
              echo "tests=[]" >> "${GITHUB_OUTPUT}"
              exit 0
          fi

          tests=$(find . -name test-plan.yaml -exec dirname {} \; | sed -e "s/^\.\///g")
          echo "Tests: ${tests}"
          echo "tests=$(echo "${tests}" | jq --raw-input --slurp --compact-output 'split("\n") | map(select(. != ""))')" >> "${GITHUB_OUTPUT}"

  run-tests:
    name: Integration Test
    needs: list-tests
    runs-on: ubuntu-latest
    if: needs.list-tests.outputs.tests != '[]'
    strategy:
      matrix:
        test: ${{ fromJson(needs.list-tests.outputs.tests) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          path: source
          persist-credentials: 'false'

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          path: helm-chart-toolbox
          repository: grafana/helm-chart-toolbox
          persist-credentials: 'false'

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112  # v4.3.0

      - name: Install Flux CLI
        uses: fluxcd/flux2/action@6bf37f6a560fd84982d67f853162e4b3c2235edb  # v2.6.4

      - name: Install Kind CLI
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3  # v1.12.0
        with:
          install_only: true

      - name: Install Minikube CLI
        uses: medyagh/setup-minikube@e3c7f79eb1e997eabccc536a6cf318a2b0fe19d9  # v0.0.20
        with:
          start: false

      - name: Install terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd  # v3.1.2

      - name: Run test
        run: helm-chart-toolbox/tools/helm-test/helm-test "${TEST_DIRECTORY}"
        env:
          KUBECONFIG: "source/charts/k8s-monitoring/tests/integration/${{ matrix.test }}/kubeconfig.yaml"
          TEST_DIRECTORY: "source/charts/k8s-monitoring/tests/integration/${{ matrix.test }}"
          DELETE_CLUSTER: true
